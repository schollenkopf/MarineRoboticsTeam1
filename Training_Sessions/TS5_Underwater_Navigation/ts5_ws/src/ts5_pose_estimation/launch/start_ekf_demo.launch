<launch>
    <!-- Flag to start recoding a rosbag  -->
    <arg name="gui" default="true"/>

    <!-- Initial position and heading of the vehicle (wrt Gazebo's inertial frame)  -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="-34.5"/>
    <arg name="yaw" default="0.0"/>

    <arg name="use_ned_frame" default="false"/>
    <arg name="record_directory" default="/home/ubuntu/34763-autonomous-marine-robotics/Training_Sessions/TS5_Underwater_Navigation/"/>

    <!-- Initialize the Gazebo world  -->
    <include file="$(find bluerov2_description)/launch/bridge.launch">
        <arg name="gui" default="$(arg gui)"/>
    </include>

    <!-- Add the BlueROV2 vehicle to the world  -->
    <include file="$(find bluerov2_description)/launch/upload.launch">
        <arg name="x" default="$(arg x)"/>
        <arg name="y" default="$(arg y)"/>
        <arg name="z" default="$(arg z)"/>
        <arg name="yaw" default="$(arg yaw)"/>
        <arg name="use_ned_frame" value="$(arg use_ned_frame)"/>
    </include>

    <!-- Start the PID controller with its default parameters for the bluerov2 vehicle  -->
    <include file="$(find bluerov2_control)/launch/rov_pid_controller.launch"> 
        <arg name="uuv_name" value="bluerov2"/> 
        <arg name="model_name" value="bluerov2"/> 
        <arg name="use_ned_frame" value="$(arg use_ned_frame)"/> 
    </include> 

    <node pkg="rosbag"
          type="record"
          name="record_bluerov2_data"
          args="record -o $(arg record_directory) /bluerov2/imu /bluerov2/pose_gt" 
          output="screen">
    </node>

    <node pkg="bluerov2_control"
          type="odometry_to_path.py"
          name="odometry_to_path"
          output="screen">
    </node>

    <node pkg="ts5_pose_estimation"
          type="odometry_to_path.py"
          name="odometry_to_path_ekf"
          output="screen">
          <remap from="/bluerov2/pose_gt" to="/odometry/filtered"/>
          <remap from="/bluerov2/path_gt" to="/odometry_path_gt"/>
    </node>

    <!-- Start EKF  -->
    <include file="$(find ts5_pose_estimation)/launch/ekf.launch"/>

    <!-- Start RViz  -->
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find ts5_pose_estimation)/rviz/bluerov2_pose_estimation.rviz"/>
    
</launch>
